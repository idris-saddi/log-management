# Production Environment Configuration
version: '3.8'

# Override for production with:
# docker compose -f docker-compose.yml -f environments/docker-compose.prod.yml up

services:
  graylog:
    environment:
      GRAYLOG_HTTP_EXTERNAL_URI: "https://logs.yourdomain.com/"
      GRAYLOG_ROOT_TIMEZONE: "UTC"
      GRAYLOG_WEB_ENDPOINT_URI: "https://logs.yourdomain.com/api"
      GRAYLOG_ELASTICSEARCH_DISCOVERY_ZEN_PING_UNICAST_HOSTS: "opensearch:9200"
    volumes:
      - ./config/graylog.prod.conf:/usr/share/graylog/config/graylog.conf
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 1G
          cpus: "0.5"

  opensearch:
    environment:
      OPENSEARCH_JAVA_OPTS: "-Xms2g -Xmx2g"
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "2.0"
        reservations:
          memory: 2G
          cpus: "1.0"

  log-service:
    environment:
      SPRING_PROFILES_ACTIVE: production
      JAVA_OPTS: "-Xms512m -Xmx1g"
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
          cpus: "0.25"

  service1:
    environment:
      SPRING_PROFILES_ACTIVE: production
      JAVA_OPTS: "-Xms256m -Xmx512m"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: "0.25"

  service2:
    environment:
      SPRING_PROFILES_ACTIVE: production
      JAVA_OPTS: "-Xms256m -Xmx512m"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: "0.25"

  # Production-grade reverse proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - graylog
    networks:
      - graynet
